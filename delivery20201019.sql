/***********************************************/


SELECT A.RENO, LPAD(' ', (LEVEL-1)*3) || A.RESENTENCE, A.SCORE,
    A.REDATE, A.RERENO, A.COMNO, A.USER_ID
FROM REVIEW A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
LEFT OUTER JOIN CATEGORY C ON C.CATNO = B.CATNO
START WITH A.RERENO IS NULL
CONNECT BY PRIOR A.RENO = A.RERENO
WHERE C.CATNO = 1 AND A.COMNO = 1
ORDER SIBLINGS BY RENO DESC;

SELECT A.RENO, LPAD(' ', (LEVEL-1)*3) || A.RESENTENCE, A.SCORE,
    A.REDATE, A.RERENO, A.COMNO, A.USER_ID
FROM REVIEW A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
WHERE B.CATNO = 1 AND A.COMNO = 1
START WITH A.RERENO IS NULL
CONNECT BY PRIOR A.RENO = A.RERENO
ORDER SIBLINGS BY RENO DESC;


SELECT A.RENO, LPAD(' ', (LEVEL-1)*3) || A.RESENTENCE, A.SCORE,
    A.REDATE, A.RERENO, A.COMNO, A.USER_ID
FROM REVIEW A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
START WITH A.RERENO IS NULL
CONNECT BY PRIOR A.RENO = A.RERENO
ORDER SIBLINGS BY RENO DESC;

SELECT A.RESENTENCE, A.SCORE,
    A.REDATE, A.RERENO, A.COMNO, A.USER_ID, B.CATNO
FROM REVIEW A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO;

SELECT *
FROM USERS;
DESC USERS;

COMMIT;

SELECT *
FROM REVIEW;
자동,?,?,sysdate,?,?,?
WHERE CATNO=?
AND COMNO=?

SELECT *
FROM MENU
WHERE COMNO = 1;
INSERT MENU
WHERE CATNO = ?, COMNO = ?;

/*주문과 카테고리 번호 조인*/

SELECT DELNO,ALLMENU,ADM ,DELDATE, SAL,PAYWAY
FROM DELIVER
WHERE DELCHECK = 't' AND COMNO=1;


SELECT A.RESENTENCE, A.SCORE,
    A.REDATE, A.RERENO, A.COMNO, A.USER_ID, B.CATNO
FROM REVIEW A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO;

SELECT A.DELNO, A.ALLMENU, A.ADM , A.DELDATE, A.SAL, A.PAYWAY, B.CATNO
FROM DELIVER A LEFT OUTER JOIN COMPANY B ON A.COMNO = B.COMNO
WHERE A.DELCHECK = 't' AND A.COMNO=1 AND B.CATNO = 1;

SELECT *
FROM DELIVER;

UPDATE DELIVER SET DELCHECK = 't' WHERE DELNO = 1;



SELECT *
FROM COMPANY;

DELETE COMPANY;

SELECT *
FROM MENU;
DELETE MENU;

SELECT *
FROM ORDERMENU;
DELETE ORDERMENU;

COMMIT;


SELECT *
FROM deliver;

DELETE DELIVER WHERE delno = 4;

SELECT * 
FROM COMPANY;

SELECT *
FROM MENU;
DESC MENU;

INSERT INTO MENU VALUES((SELECT NVL(MAX(MENO),0)+1 FROM MENU)
                ,'test메뉴이름', 1000, 1, 
                (SELECT NVL(MAX(CMENO),0)+1 FROM MENU));

SELECT NVL(MAX(CMENO),0)+1 
FROM MENU
WHERE CAT;
cmeno가 입력되면 삭제...
카테고리번호와 업체번호가 조건

DELETE MENU WHERE CMENO = ?;

SELECT *
FROM CATEGORY;
SELECT *
FROM COMPANY
WHERE CATNO = 2;
DESC COMPANY;

INSERT INTO COMPANY VALUES(1, 'test업체', '서울', 2, '서울어딘가','1234','');

UPDATE COMPANY SET COMNO = 1 WHERE CATNO = 2;

SELECT B.*
FROM MENU A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
WHERE B.CATNO = 2 AND B.COMNO = 2;

SELECT *
FROM MENU
ORDER BY COMNO, CMENO;

CMENO = 이 메뉴가 몇번 업체에 속해있다.
=그 가게들이 메뉴가 몇개 있는지;

DESC MENU;
DELETE MENU WHERE COMNO = 2;
COMMIT;
INSERT INTO MENU VALUES((SELECT NVL(MAX(MENO),0)+1 FROM MENU)
        , '매우매우진한아메리카노2', 1000, 
        (SELECT COMNO FROM COMPANY WHERE COMNO = 2 AND CATNO = 2), 
        (SELECT NVL(COUNT(CMENO),0)+1 FROM MENU WHERE COMNO = 2));




카테고리 업체 번호;
SELECT *
FROM COMPANY;
SELECT *
FROM MENU;


DELETE MENU WHERE CMENO = 2 AND CATNO = 2;

(SELECT B.*
FROM MENU A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
WHERE B.CATNO = 2 AND B.COMNO = 2);


DELETE (SELECT B.*
FROM MENU A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO)
WHERE B.CATNO = 2 AND B.COMNO = 2;

SELECT *
FROM MENU;

SELECT A.MENM, A.CMENO, A.COMNO, B.CATNO
FROM MENU A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
WHERE B.CATNO = 2 AND B.COMNO = 2;

DELETE FROM MENU A
WHERE (A.COMNO) = 
(SELECT B.COMNO
FROM COMPANY B
WHERE B.CATNO = 2 AND B.COMNO = 2 AND A.CMENO = 1);

SELECT *
FROM MENU;

ROLLBACK;

COMMIT;

/*댓글*/
SELECT A.reno,
    LPAD(' ', (LEVEL-1)*3) || A.RESENTENCE RESENTENCE,
    A.SCORE, A.COMNO, A.USER_ID, A.REDATE 
FROM REVIEW A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
              LEFT OUTER JOIN CATEGORY C ON C.CATNO = B.CATNO
              WHERE A.COMNO =1 AND C.CATNO =1
    START WITH A.RERENO IS NULL CONNECT BY PRIOR A.RENO = A.RERENO 
ORDER SIBLINGS BY reno DESC;

COMMIT;
/*업체번호 카테고리 댓글번호 입력하면 등록 내용도*/

SELECT *
FROM REVIEW;
DESC REVIEW;


INSERT INTO REVIEW VALUES((SELECT NVL(MAX(RENO),0)+1 FROM REVIEW)
                        , '문장 들어가는곳', '평점들어가는곳다만 숫자타입',
                        SYSDATE, '어디 댓글번호에 달것인가 입력부분',
                        '업체번호 숫자 타입', '유저아이디');
                        
INSERT INTO REVIEW VALUES((SELECT NVL(MAX(RENO),0)+1 FROM REVIEW),
                        '1번째의 1번째의 1번째의 1번째 실험 댓글', 5,
                        SYSDATE, 4, 
                        (SELECT COMNO FROM COMPANY WHERE COMNO = 1 AND CATNO = 1),
                        'test');
/*참고*/

INSERT INTO MENU VALUES((SELECT NVL(MAX(MENO),0)+1 FROM MENU)
        , '매우진한아메리카노', 1000, 2, 
        (SELECT NVL(COUNT(CMENO),0)+1 FROM MENU WHERE COMNO = 2));


COMMIT;

SELECT *
FROM USERS;

SELECT *
FROM USERSDATE;
DESC USERSDATE;

/*걸린시간 JOIN하는 부분****************************************************/

INSERT INTO USERSDATE VALUES('test', '30분');

USERSDATE, USERS, DELIVER

SELECT B.*
FROM MENU A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
WHERE B.CATNO = 2 AND B.COMNO = 2;

SELECT A.USER_ID, B.GETTIME
FROM USERS A LEFT OUTER JOIN USERSDATE B ON A.USER_ID = B.USER_ID;

COMMIT;

SELECT A.USER_ID, C.DELNO, C.COMNO, C.ALLMENU, C.SAL, C.PAYWAY, B.GETTIME
FROM USERS A LEFT OUTER JOIN USERSDATE B ON A.USER_ID = B.USER_ID
    LEFT OUTER JOIN DELIVER C ON C.DELNO = B.DELNO
WHERE A.USER_ID = 'test';   


SELECT *
FROM USERS A LEFT OUTER JOIN USERSDATE B ON A.USER_ID = B.USER_ID
    LEFT OUTER JOIN DELIVER C ON C.USER_ID = A.USER_ID
WHERE A.USER_ID = 'test';

COMMIT;

SELECT *
FROM USERSDATE;

DESC USERSDATE;

COMMIT;

INSERT INTO USERSDATE VALUES((SELECT USER_ID FROM USERS WHERE USER_ID = 'test'),
                    '30분',
                    (SELECT DELNO FROM DELIVER WHERE DELNO = 1));

SELECT A.USER_ID, C.DELNO, C.COMNO, C.ALLMENU, C.SAL, C.PAYWAY, B.GETTIME
FROM USERS A LEFT OUTER JOIN USERSDATE B ON A.USER_ID = B.USER_ID
    LEFT OUTER JOIN DELIVER C ON C.DELNO = B.DELNO
WHERE A.USER_ID = 'test'; 


/*공지등록*/
INSERT INTO NOTICE(NOTICENO, NOTICE, COMNO, NODATE)
							VALUES ((SELECT NVL(MAX(NOTICENO),0)+1 
                                    FROM NOTICE A LEFT OUTER JOIN COMPANY B ON B.COMNO = A.COMNO
                                      WHERE A.COMNO =1 AND B.CATNO=1)
									, 'TEST', 1, SYSDATE); 

SELECT *
FROM NOTICE;
DESC NOTICE;

INSERT INTO NOTICE VALUES((SELECT NVL(MAX(NOTICENO),0)+1 FROM NOTICE),
                            '공지',
                            (SELECT COMNO FROM COMPANY WHERE COMNO = 1 AND CATNO = 1),
                            SYSDATE);


(SELECT NVL(MAX(NOTICENO),0)+1 FROM NOTICE);

(SELECT COMNO FROM COMPANY WHERE COMNO = 1);

조건은 업체번호 카테고리
수정과 삭제
COMMIT;

DELETE NOTICE WHERE COMNO = (SELECT COMNO FROM COMPANY WHERE COMNO = 1 AND CATNO = 1);

Update Tbl Set Tbl.N = Tbl.N+1;
UPDATE NOTICE SET NOTICE = '공지내용수정됨' WHERE COMNO = (SELECT COMNO FROM COMPANY WHERE COMNO = 1 AND CATNO = 1);



SELECT USER_ID, DELNO
FROM DELIVER
WHERE USER_ID = (
SELECT USER_ID
FROM DELIVER
WHERE DELNO = 1);

(SELECT USER_ID
FROM DELIVER
WHERE DELNO = 2);

SELECT *
FROM USERSDATE;
DESC USERSDATE;

INSERT INTO USERSDATE VALUES(
        (SELECT USER_ID FROM USERS
        WHERE USER_ID = (SELECT USER_ID
            FROM DELIVER
            WHERE DELNO = ?)),
        ?, (SELECT DELNO
            FROM DELIVER WHERE DELNO = ?));

'test'
'걸린시간'

SELECT *
FROM DELIVER;

SELECT DELNO
FROM DELIVER
WHERE COMNO = (SELECT COMNO
                FROM COMPANY
                WHERE COMNO = 1 AND CATNO = 1)
AND USER_ID = 'test';

SELECT *
FROM USERSDATE;

SELECT *
FROM NOTICE;
DESC NOTICE;

COMMIT;
ROLLBACK;
삭제 수정

DELETE NOTICE WHERE NOTICENO = 1 AND COMNO = 1;

UPDATE NOTICE SET NOTICE = 'test' WHERE NOTICENO = 1 AND COMNO = 1;

SELECT *
FROM USERSDATE;

COMMIT;













/* 개인정보 */
CREATE TABLE USERSDATE (
	USER_ID VARCHAR2(50) NOT NULL, /* 아이디 */
	GETTIME VARCHAR2(50) NOT NULL, /* 걸린시간 */
	DELNO NUMBER /* 주문번호 */
);

COMMENT ON TABLE USERSDATE IS '개인정보';

COMMENT ON COLUMN USERSDATE.USER_ID IS '아이디';

COMMENT ON COLUMN USERSDATE.GETTIME IS '걸린시간';

COMMENT ON COLUMN USERSDATE.DELNO IS '주문번호';

ALTER TABLE USERSDATE
	ADD
		CONSTRAINT FK_USERS_TO_USERSDATE
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES USERS (
			USER_ID
		);

ALTER TABLE USERSDATE
	ADD
		CONSTRAINT FK_DELIVER_TO_USERSDATE
		FOREIGN KEY (
			DELNO
		)
		REFERENCES DELIVER (
			DELNO
		);




COMMIT;


SELECT *
FROM USERSDATE;

UPDATE USERSDATE SET DELCANCLE = 'test주문취소'
WHERE USER_ID = 'test' AND DELNO = 1;

SELECT *
FROM DELIVER;

DELETE DELIVER WHERE DELNO = 3;

ROLLBACK;

SELECT *
FROM REVIEW;

SELECT *
FROM LPROD
WHERE LPROD_ID BETWEEN 1 AND 2;

































